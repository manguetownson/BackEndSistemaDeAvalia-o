generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  name            String
  email           String   @unique
  password        String
  isActive        Boolean
  profileImage    String
  school          School   @relation(fields: [schoolId], references: [id])
  schoolId        String
  course          Course   @relation(fields: [courseId], references: [id])
  courseId        String
  role            Role     @default(USER)
  isEmailVerified Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  Token           Token[]

  @@map("users")
}

model School {
  id       String     @id @default(uuid())
  title    String
  course   Course[]
  subjects Subjects[]
  User     User[]

  @@map("schools")
}

model Course {
  id       String     @id @default(uuid())
  title    String
  schoolId String
  school   School     @relation(fields: [schoolId], references: [id])
  subjects Subjects[]
  User     User[]

  @@map("course")
}

model Subjects {
  id       String  @id @default(uuid())
  title    String
  value    String
  courseId String
  course   Course  @relation(fields: [courseId], references: [id])
  notes    Note[]
  School   School? @relation(fields: [schoolId], references: [id])
  schoolId String?

  @@map("subjects")
}

model Note {
  id        String   @id @default(uuid())
  content   String
  subjectId String
  subject   Subjects @relation(fields: [subjectId], references: [id])

  @@map("notes")
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

enum Role {
  USER
  ADMIN
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}
